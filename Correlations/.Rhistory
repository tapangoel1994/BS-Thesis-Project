demo()
plot norm(0,1)
a=11
b=12
a+b
clear
q
a=1
b=12
a <1
a< =1
a <- 1
a
a <-11
a
a+b*c
a+a*b
1:1
1:3
plot(x =1:10;y = x*x)
plot(x =1:10,y = x*x)
plot(x=1:10,y=x*x)
plot(x=1:10,y=2:11)
a=1
a
a<7
a>3
a==1
a==0
a = [1,2,3,]
a = 1,2,3,4
a = {1,2}
clear
sessionInfo()
plot(x = 0:10,y = 1:11)
c;ear
clear()
q()
source('~/.active-rstudio-document')
bin(10)
rbinom(10,15,.2)
plot(rbinom(100,10,.2))
plot(rbin(1,1,.5)
)
plot(rbin(1,1,.5))
plot(rbinom(1,1,.5))
plot(rbinom(1,1,.5))
plot(rbinom(1,1,.5))
plot(rbinom(2,1,.5))
plot(rbinom(1,2,.5))
plot(rbinom(1,3,.5))
plot(rbinom(1,5,.5))
plot(rbinom(5,5,.5))
plot(rbinom(6,5,.5))
plot(rnorm(100,2,1)
)
hist(rnorm(1000,2,1)
)
hist(rnorm(1000,0,1))
hist(rnorm(100,0,1))
hist(rnorm(100,0,2))
hist(rnorm(100,0,3))
hist(rnorm(1000,0,0))
hist(rnorm(1000,0,1))
hist(rnorm(1000,0,2))
hist(rnorm(1000,0,3))
hist(rnorm(1000,0,4))
hist(rnorm(1000,0,5))
hist(rnorm(1000,0,10))
hist(rnorm(1000,0,100))
hist(rnorm(1000,0,1000))
q()
rmarkdown
install.packages("rmarkdown")
install.packages("rmarkdown")
y
install.packages("rmarkdown")
install.packages("rmarkdown")
getOption("repos")
plot(rpois(100,1))
hist(rpois(100,1))
hist(rpois(100,2))
hist(rpois(1000,1))
hist(rpois(1000,2))
hist(rpois(1000,3))
hist(rpois(1000,4))
hist(rpois(1000,10))
hist(rpois(1000,20))
hist(rpois(1000,30))
hist(rpois(100000,1))
hist(rpois(1000,1))
hist(rpois(5000,1))
hist(rbinom(100,1,.2))
hist(rbinom(100,2,.5))
hist(rbinom(100,1,.5))
hist(rbinom(100,1,.5))
hist(rbinom(100,1,.5))
hist(rbinom(100,1,.5))
hist(rbinom(100,1,.5))
hist(rbinom(100,1,.5))
hist(rbinom(100,1,.5))
hist(rbinom(100,1,.5))
hist(rbinom(100,1,.5))
hist(rbinom(100,1,1))
hist(rbinom(100,1,1))
hist(rbinom(100,1,1))
hist(rbinom(100,1,.9))
hist(rbinom(100,1,.9))
hist(rbinom(100,1,.9))
hist(rbinom(100,1,.9))
hist(rbinom(100,1,.9))
f<-function(x){
y<-2
y^2 + g(x)
}
g<-function(x){
x*y
}
y<-10
f(3)
f(3)
g(3)
x <- c(1,2,3)
x
class(x)
attributes(x)
is.vector(x)
is.list(x)
y <- list(1,2,3)
y
class(y)
attributes(x)
attributes(y)
is.vector(y)
is.list(y)
y
x+y
x+as.vector(y)
as.vector(y)
as.vector(y,"numeric")
x+as.vector(y,"numeric")
z =list(x,T,T)
z
x[1]
z[1]
z[[1]]
z[2]
z[[2]]
x
x[1]
x[2]
z[1][1]
z[1][2]
z[1]
z[1][1]
z[1][3]
z[1]
as.vector(z[1])
as.vector(z[1])[1]
(as.vector(z[1]))[1]
(as.vector(z[1]))[2]
z[1]
v<- z[1]
v[1]
v[[1]]
v<- z[[1]
]
v
v[1]
z[[1]][1]
z[[1]][2]
z[[1]][3]
runif(20)
a<-runif(20)
a
a[2]
a[12]
which(a<.5)
b<- a[a<.5]
b
length(b)
?log
x<- c(10, 25, 50, 75, 100, 150, 200)
b <-list()
for(i in 1:7){
b[i] <- rnorm(n=x[i],mean=5,sd=2)
}
b[1]
b
for(i in 1:7){
b[[i]] <- rnorm(n=x[i],mean=5,sd=2)
}
b
b[1]
b[[1]]
b[[2]]
b[1]
b[2]
b[3]
mean<-list()
for(i in 1:7){
mean[[i]] = mean(b[[i]])
}
mean
as.vector(mean)
mean[1]
c <-as.vector(mean)
c
sd <-vector("numeric",length = 7)
for(i in 1:7){}
for(i in 1:7){ sd[i] = sd(a[[i]])}
sd
a[[1]]
for(i in 1:7){ sd[i] = sd(b[[i]])}
sd
FALSE || TRUE && 6 != 4 || 9 > 4
6 >= -9 && !(6 > 7) && !(!TRUE)
!(8 > 4) ||  5 == 5.0 && 7.8 >= 7.79
FALSE && 6 >= 6 || 7 >= 8 || 50 <= 49.5
xor(!isTRUE(TRUE), 6 > -1)
xor(4 >= 9, 8 != 8.0)
swirl()
library("swirl")
swirl()
exit
exit()
viewinfo()
tapply(flags,c(flags$population,flags$landmass),summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(pplants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1),100,prob=.3)
sample(c(0,1),100,prob=.7)
sample(c(0,1),100,prob=(.3,.7))
sample(c(0,1) , 100, prob=c(.3,.7))
sample(c(0,1) , 100, replace = TRUE, prob=c(.3,.7))
flips
| <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips<- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sun(flips)
sum(flips)
?rbinom
rbinom(1, size =100, prob = 0.7)
flips2<-rbinom(1, size =100, prob = 0.7)
flips2 <- rbinom(100, size =1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
rpois(5,10)
replicate(100,rpois(5,10))
my_poisreplicate(100,rpois(5,10))
my_pois<-replicate(100,rpois(5,10))
my_pois
colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
d1<-Sys.Data()
d1<-Sys.Date()
class(d1)
unclass(d1)
dt
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
d1 <- weekdays()
d1 <- weekdays(d1)
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3,"%B %d, %Y %H:%M")
t4
class(t)
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
lot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist)
plot(y = cars$speed, x = cars$dist)
plot(x = cars$speed, y = cars$dist,xlab = "Speed")
plot(x = cars$speed, y = cars$dist,ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist,xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist,xlab = "Speed", ylab = "Stopping Distance", main = "My Plot")
plot(x = cars, main = "My Plot")
plot(x = cars, main = "My Plot", sub = "My Plot Subtitle")
plot(x = cars,sub = "My Plot Subtitle")
?par
plot(x = cars,col = 2)
plot(x = cars, xlim = c(10,15))
plot(x = cars, pch = 2)
data(mtcars)
?boxplot
boxplot(data =mtcars, formula = mpg ~cyl)
boxplot(mtcars, formula = mpg ~cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f
q
g
environment(f)
environment(g)
ls(environment(g))
ls(environment(f))
ls(environment(f()))
ls(environment(f)
)
ls(environment(g))
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
View(f)
ls()
rm(z,f)
ls()
numeric = 1
numeric(1)
numeric(5)
numeric(Inf)
1/0
Inf
0/Inf
Inf - Inf
Inf/Inf
0/0
o/1
Inf*Inf
Na
NA
1/NA
NaN
1/Nan
1/NaN
Noin
NaN <-3
NaN <- 3
?seq
?pi
source('~/Diffusion.R')
function(0,1)
function(1,1)
diffusion(0,1)
diffusion(1,1)
diffusion(2,1)
diffusion(3,1)
diffusion(4,1)
diffusion(5,1)
for(time in 1:100)
{}
for(time in 1:100){
diffusion(time,1)
}
x <- seq(-10,10,.2)
diffusion <- function(x,time,D){
y <- (1/(4*3.14*D*time)^(0.5))*exp(-x^2/(4*D*time))
}
diffusion(seq(-10,10),1,1)
plot(x,diffusion(x,1,1))
for(i in 1:100)
{
points(x,diffusion(x,i,1))
}
source('~/Diffusion.R')
for(i in 1:100)
{
plot(x,diffusion(x,i,1))
pause(.5)
}
for(i in 1:100)
{
plot(x,diffusion(x,i,1))
Sys.sleep(.5)
}
?plot
?ylim
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('~/Diffusion.R')
source('/backup/Course Work/Spatial Dynamics/Random walk.R')
randomwalk(100,.5)
source('/backup/Course Work/Spatial Dynamics/Random walk.R')
source('/backup/Course Work/Spatial Dynamics/Random walk.R')
randomwalk(100,.5)
randomwalk(100,.1)
randomwalk(100,.9)
randomwalk(100,.5)
randomwalk2D(100,.5)
randomwalk2D(1000,.5)
x
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
y
plot(x,y)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
y
e
plot(x,y)
set.seed(1)
rpois(5, 2)
load("/backup/Viscek Model/Correlations/Density_3.25Noise_7.00.csv")
setwd("/backup/Viscek Model/Correlations")
a <- read.csv("Density_3.25Noise_7.00.csv")
summary(a)
str(a)
a[1,1:10]
a[1,1:3]
