ls
?ls
ux
str(ux)
summary(ux)
acf(ux[,1])
acf(ux[,2])
x <- acf(ux[,1])
x
x = list()
y = list()
for(n in 1:100){
x[i] = acf(ux[,n])
y[i] = acf(uy[,n])
}
warnings()
acf(ux[,5])
acf(ux[,100])
x = list()
y = list()
for(n in 1:100){
x[i] = acf(ux[,n],plot = F)
y[i] = acf(uy[,n],plot = F)
}
warnings()
x = list()
y = list()
for(n in 1:100){
x[n] = acf(ux[,n],plot = F)
y[n] = acf(uy[,n],plot = F)
}
warnings()
y
y[2]
y[1]
str(y)
warning()
warnings()
x = list()
y = list()
for(n in 1:100){
x[n] = acf(ux[,n],plot = F)
y[n] = acf(uy[,n],plot = F)
}
warnings()
x[1] = acf(ux[,1],plot = F)
?acf
x = list()
y = list()
for(n in 1:100){
x[n] = acf(ux[,n],plot = FALSE)
y[n] = acf(uy[,n],plot = FALSE)
}
x[1] = acf(ux[,1])
x[2] = acf(ux[,2])
?acf
mean(x)
x
x = list()
y = list()
for(n in 1:100){
x[n] = acf(ux[,n],plot = FALSE)
y[n] = acf(uy[,n],plot = FALSE)
}
x[1]
x[1][1]
x[[1]]
x[[1]][1]
x[[1]][2]
x[[1]][3]
x[[1]][3]
plot(1:length(x[[1]]),x[[1]])
plot(x[[1]])
plot(x[[2]])
plot(x[[3]])
plot(x[[4]])
z = x+y
z[[1]] = x[[1]]+y[[1]]
x[[1]]+y[[1]]
plot(x[[1]]+y[[1]])
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
data <- read.csv("Randomwalk.csv")
N = ncol(data)/3
T = nrow(data)
theta <- matrix(nrow = T,ncol = N)
theta[,1:100] = data[,seq(3,300,3)]
theta[,1]
theta[1,1]
theta
str(theta)
rm(theta)
data <- read.csv("Randomwalk.csv")
N = ncol(data)/3
T = nrow(data)
theta <- matrix(nrow = T,ncol = N)
theta[,1] = data[,3]
theta[,1]
theta
theta[,1:2] = data[,c(3,6)]
theta[,1]
str(theta)
summary(theta)
dim(theta)
nrow(theta)
ncol(theta)
typeof(theta)
theta = matrix(nrow = T,ncol = N)
for(i in 1:N){
theta[,i] = data[,3*i]
}
theta[,1]
theta[,2]
theta[,3]
theta[1:2,1:2]
data[c(1,2),c(3,6)]
x <- data[,seq(3,300,3)]
x
theta[1:3,1:3]
x[1:3,1:3]
theta[1:3,1:3] - x[1:3,1:3]
N = ncol(data)/3
T = nrow(data)
theta <- data[,seq(3,N*3,3)]
vx <- cos(theta)
vy <- sin(theta)
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
str(vx)
?rowMeans
mat <- matrix(data = c(1,2,3,4),nrow = 2,ncol = 1)
mat
mat <- matrix(data = c(1,2,3,4),nrow = 2,ncol = 2)
mat
rowMeans(mat)
colMeans(x)
colMeans(mat)
mat
rm(x)
vxmean = rowMeans(vx)
vymean = colMeans(vy)
vymean = rowMeans(vy)
ux = vx - vxmean
x = matrix(c(2,4,10,15),nrow = 2,ncol = 2)
x
xmean = rowMeans(x)
xmean
x - xmean
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
?acf
type(x)
class(x)
class(data)
class(x[,1])
x <- 1:10
acf(x)
l = acf(x)
l
x <- 1:100
x
acf(x)
acf(x)
acf(x,lag.max = 99)
x= 1:5000
acf(x,lag.max = 500)
acf(x,lag.max = 1000)
l = acf(x,lag.max = 1000)
l
plot(l)
plot(l,type = 'l')
clear
ls
?expr
plot(x^2)
x
plot(z)
curve(z)
curve(x)
?curve
expression(x)
?curve
curve(x^2,-10,10)
curve( () , fro)
curve( (1-x)^2*(1-2.5*x) ,0,1 )
curve( (1-x)^2*(1-2.5*x) ,0,2 )
curve( (1-x)^2*(1-2.5*x) ,-2,2 )
acf(ux[,1])
View(data)
acf(ux[,2])
mean(c(acf(ux[,1]),acf(ux[,2])))
mean(c(acf(ux[,1]),acf(ux[,2])))
l = acf(ux[,1])
l
str(l)
l[[1]]
l[[2]]
str(l)
summary(l)
mean(c(acf(ux[,1])[[1]],acf(ux[,2]))[[1]])
l[1]
l[[1]]
l[[2]]
l[[3]]
l[[4]]
l[[5]]
l[[7]]
l[[6]]
l[[1]]
str(l[[1]])
mean(l[[1]])
acf(ux[,100],lag.max = 100)
acf(ux[,100],lag.max = 200)
acf(ux[,100],lag.max = 300)
acf(ux[,100],lag.max = 400)
acf(ux[,100],lag.max = 4800)
x = 1:10
y = 11:20
mean(x+y)
x
mean(x)
mean(y)
x+y
x+y
mean(x[1]+y[1])
acf(ux[,1])[[1]] +acf(uy[,1])[[1]]
acf(ux[,1])[[1]]
acf(ux[,1])[[1]] +1
acf(ux[,1])[[1]] + acf(uy[,1])[[1]]
N = ncol(data)/3
T = nrow(data)
theta <- data[,seq(3,N*3,3)]
vx <- cos(theta)
vy <- sin(theta)
vxmean = rowMeans(vx)
vymean = rowMeans(vy)
ux <- vx - vxmean
uy <- vy - vymean
acf(ux[,1])[[1]] + acf(uy[,1])[[1]]
plot(acf(ux[,1])[[1]] + acf(uy[,1])[[1]])
acf(ux[,1])[1]
acf(ux[,1])[[1]]
str(acf(ux[,1])[[1]])
str(acf(ux[,1])[1])
str(acf(ux[,1])[2])
str(acf(ux[,1])[3])
acf(ux[,1])[[1]][1,]
acf(ux[,1])[[1]][,1]
acf(ux[,1])[[1]]
str(acf(ux[,1])[[1]])
acf(ux[,1])[[1]] + acf(ux[,2])[[1]]
acf(ux[,1])[[1]] + acf(ux[,2])[[1]] + acf(ux[,3])[[1]]
acf(ux[,5])
acf(ux[,5],lag.max = 499)
data = read.csv("Randommigration.csv")
N = ncol(data)/3
T = nrow(data)
theta <- data[,seq(3,N*3,3)]
vx <- cos(theta)
vy <- sin(theta)
vxmean = rowMeans(vx)
vymean = rowMeans(vy)
ux <- vx - vxmean
uy <- vy - vymean
acf(ux[,1])
ux
ux[,1]
vx[,1]
rowMeans(vx)
cx
vc
data = read.csv("Randommigration.csv")
data = read.csv("Randommigration.csv")
N = ncol(data)/3
T = nrow(data)
theta <- data[,seq(3,N*3,3)]
theta[1,1]
theta[2,1]
theta[3,1]
theta[4,1]
theta[1,2]
theta[1,3]
theta[1,4]
vx <- cos(theta)
vy <- sin(theta)
vxmean = rowMeans(vx)
vymean = rowMeans(vy)
ux <- vx - vxmean
uy <- vy - vymean
rowMeans(ux)
ux[1,1]
ux[1,2]
ux[1,3]
ux[2,1]
ux[2,2]
ux[1:3,1:3]
uy[1:3,1:3]
acf(ux[,1],lag.max = 250,type = c("covariance"))
acf(ux[,2],lag.max = 250,type = c("covariance"))
acf(ux[,3],lag.max = 250,type = c("covariance"))
acf(ux[,4],lag.max = 250,type = c("covariance"))
?covariance
data <- read.csv("Randomwalk.csv")
N = ncol(data)/3
T = nrow(data)
theta <- data[,seq(3,N*3,3)]
vx <- cos(theta)
vy <- sin(theta)
vxmean = rowMeans(vx)
vymean = rowMeans(vy)
ux <- vx - vxmean
uy <- vy - vymean
acf(ux[,])
acf(ux[,1])
acf(ux[,1],lag.max = 250)
acf(ux[,1],lag.max = 250,type = "covariance")
?acf
acf
l = acf(ux)
plot(l)
x = acf(ux[,1]) + acf(uy[,1])
x = acf(ux[,1])[[1]] + acf(uy[,1])[[1]]
x
plot(x)
x = acf(ux[,1],lag.max = 250)[[1]] + acf(uy[,1],lag.max = 250)[[1]]
plot(x)
x = acf(ux[,1],lag.max = 250)[[1]] + acf(uy[,1],lag.max = 250)[[1]]
acf
plot.acf
?plot.acf
plot.acf(acf(ux[,1],lag.max = 250)+acf(uy[,1],lag.max = 250))
plot.acf(acf(ux[,1],lag.max = 250)+acf(uy[,1],lag.max = 250))
?plot.acf
?plot.acf
plot.acf
?acf
acf(ux,1)
acf(ux[,1])
a = acf(ux[,1])
a
a[[1]]
a[[2]]
a[[3]]
a[[4]]
str(a)
b = acf(ux)
b
b = acf(ux[])
b = acf(ux[,1])
b = acf(ux[,2])
b = acf(ux[,2:5])
b = acf(ux[,1:2])
b
str(a)
str(b)
acf(ux[,1:100])
acf(ux[,1:10])
?acf
acf(ux[,1:2])
acf
str(acf(ux[,1])[[1]])
x = numeric()
x
x = numeric(10)
x
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
data = read.csv("directedmigration.csv")
autocorrelation(data)
data = read.csv("/backup/Viscek Model/Correlations/Density_4/Data/Density_4.00Noise_3.00.csv")
autocorrelation(data)
N = ncol(data)/3
T = nrow(data)
theta <- data[,seq(3,N*3,3)]
vx <- cos(theta)
vy <- sin(theta)
vxmean = rowMeans(vx)
vymean = rowMeans(vy)
ux <- vx - vxmean
uy <- vy - vymean
meanacf = numeric(400)
meanacf
meanacf = meanacf + acf(ux[,1],lag.max = 400)[[1]] + acf(uy[,1],lag.max = 400)[[1]]
a = acf(ux[,1],lag.max = 400)
b = acf(uy[,1],lag.max = 400)
a[[1]]
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
autocorrelation(data)
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
autocorrelation(data)
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
autocorrelation(data)
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
autocorrelation(data)
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
autocorrelation(data)
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
x = list.files("/backup/Viscek Model/Correlations/Density_4/Data/")
x
x = list.files("/backup/Viscek Model/Correlations/Density_4/Data/",full.names = TRUE)
x
x[1:29]
x <- x[1:29]
x[1]
x <- x[3:24]
x[1]
x
x[22]
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
x = list.files("/backup/Viscek Model/Correlations/Density_4/Data/",full.names = TRUE)
x <- x[3:24]
i = 1
file_name = paste("Noise = ",.25+i*.25,".jpg",sep = "")
data = read.csv(x[i])
jpeg(filename = file_name)
autocorrelation(data,.25*(i+1))
dev.off()
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
x = list.files("/backup/Viscek Model/Correlations/Density_4/Data/",full.names = TRUE)
x <- x[3:24]
file_name = paste("Noise = ",.25+i*.25,".jpg",sep = "")
data = read.csv(x[i])
jpeg(filename = file_name)
autocorrelation(data,.25*(i+1))
dev.off()
x = list.files("/backup/Viscek Model/Correlations/Density_4/Data/",full.names = TRUE)
x <- x[3:24]
for(i in 1:length(x)){
file_name = paste("Noise = ",.25+i*.25,".jpg",sep = "")
data = read.csv(x[i])
jpeg(filename = file_name)
autocorrelation(data,.25*(i+1))
dev.off()
}
x = list.files("/backup/Viscek Model/Correlations/Density_4/Data/",full.names = TRUE)
x
x[3:24]
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
x = list.files("/backup/Viscek Model/Correlations/Density_4/Data/",full.names = TRUE)
x <- x[3:24]
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
x = list.files("/backup/Viscek Model/Correlations/Density_4/Data/",full.names = TRUE)
x <- x[3:24]
for(i in 3:24){
file_name = paste("Noise = ",.25*(i-1),".jpg",sep = "")
data = read.csv(x[i])
jpeg(filename = file_name)
autocorrelation(data,.25*(i-1))
dev.off()
}
for(i in 3:24){print(i)}
3:24
length(3:24)
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
x
x[1:22]
x = list.files("/backup/Viscek Model/Correlations/Density_4/Data/",full.names = TRUE)
x <- x[3:24]
for(i in 3:24){
file_name = paste("Noise = ",.25*(i-1),".jpg",sep = "")
data = read.csv(x[i-2])
jpeg(filename = file_name)
autocorrelation(data,.25*(i-1))
dev.off()
}
data <- read.csv("Randommigration.csv")
filename = paste("Randommigration",".jpg",sep = "")
jpeg(filename = filename)
autocorrelation(data,"RandomMigration")
dev.off()
autocorrelation(data,"RandomMigration")
data <- read.csv("directedmigration.csv")
filename = paste("Directedmigration",".jpg",sep = "")
jpeg(filename = filename)
autocorrelation(data,"DirectedMigration")
dev.off()
N = ncol(data)/3
T = nrow(data)
theta <- data[,seq(3,N*3,3)]
vx <- cos(theta)
vy <- sin(theta)
vxmean = rowMeans(vx)
vymean = rowMeans(vy)
ux <- vx - vxmean
uy <- vy - vymean
meanacf = numeric(length = 201)
for(n in 1:N){
meanacf = meanacf + acf(ux[,n],lag.max = 200,plot = FALSE)[[1]] + acf(uy[,n],lag.max = 200,plot = FALSE)[[1]]
}
meanacf = meanacf/(2*N)
plot(meanacf)
meanacf
acf(ux[,1])
acf(ux[,2])
acf(ux[,3])
l = acf(ux[,3])
l
l = acf(ux[,3])
test = acf(ux[,1])
test
test
test = acf(ux[,3])
test
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
abline(v = 0)
plot(-10:10,-10:10)
dev.off()
plot(-10:10,-10:10)
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
source('/backup/Viscek Model/Correlations/Autocorrelation/autocorrelation1.R')
